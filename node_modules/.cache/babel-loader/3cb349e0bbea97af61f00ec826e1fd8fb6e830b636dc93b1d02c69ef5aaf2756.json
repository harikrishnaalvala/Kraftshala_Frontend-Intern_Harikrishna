{"ast":null,"code":"// src/App.js\nimport React,{useState,useEffect}from'react';import SearchBar from'./components/SearchBar';import WeatherCard from'./components/WeatherCard';import{fetchWeather}from'./api/weatherAPI';import{useDarkMode}from'./hooks/useDarkMode';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faToggleOn,faToggleOff}from'@fortawesome/free-solid-svg-icons';import'./styles/App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[weather,setWeather]=useState(null);const[error,setError]=useState('');const[isDarkMode,setIsDarkMode]=useDarkMode();const[setCurrentLocation]=useState('');// Track the current location\nuseEffect(()=>{const fetchCurrentLocationWeather=async()=>{if(navigator.geolocation){navigator.geolocation.getCurrentPosition(async position=>{try{const data=await fetchWeather(null,position.coords.latitude,position.coords.longitude);setWeather(data);setCurrentLocation(data.name);// Update current location\n}catch(err){setError('Could not fetch weather data for your location. Please try again.');}});}else{setError('Geolocation is not supported by this browser.');}};fetchCurrentLocationWeather();},[]);const handleSearch=async location=>{try{const data=await fetchWeather(location);setWeather(data);setError('');setCurrentLocation(data.name);// Update current location with searched location\n}catch(err){setError('Could not fetch weather data. Please try again.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"app \".concat(isDarkMode?'dark':'light'),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"toggsearch\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"toggle-button btn\",onClick:()=>setIsDarkMode(!isDarkMode),children:[isDarkMode?'Light':'Dark',\" Mode\",/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"mx-2\",style:{fontSize:'20px'},icon:isDarkMode?faToggleOff:faToggleOn})]}),/*#__PURE__*/_jsx(SearchBar,{onSearch:handleSearch})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error text-danger\",children:error}),weather&&/*#__PURE__*/_jsx(WeatherCard,{weather:weather})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","SearchBar","WeatherCard","fetchWeather","useDarkMode","FontAwesomeIcon","faToggleOn","faToggleOff","jsx","_jsx","jsxs","_jsxs","App","weather","setWeather","error","setError","isDarkMode","setIsDarkMode","setCurrentLocation","fetchCurrentLocationWeather","navigator","geolocation","getCurrentPosition","position","data","coords","latitude","longitude","name","err","handleSearch","location","className","concat","children","onClick","style","fontSize","icon","onSearch"],"sources":["C:/Users/harir/Downloads/Kraftshala_Frontend Intern_Harikrishna/Kraftshala_Frontend Intern_Harikrishna/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './components/SearchBar';\nimport WeatherCard from './components/WeatherCard';\nimport { fetchWeather } from './api/weatherAPI';\nimport { useDarkMode } from './hooks/useDarkMode';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faToggleOn, faToggleOff } from '@fortawesome/free-solid-svg-icons';\nimport './styles/App.css';\n\nconst App = () => {\n  const [weather, setWeather] = useState(null);\n  const [error, setError] = useState('');\n  const [isDarkMode, setIsDarkMode] = useDarkMode();\n  const [setCurrentLocation] = useState(''); // Track the current location\n\n  useEffect(() => {\n    const fetchCurrentLocationWeather = async () => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(async (position) => {\n          try {\n            const data = await fetchWeather(null, position.coords.latitude, position.coords.longitude);\n            setWeather(data);\n            setCurrentLocation(data.name); // Update current location\n          } catch (err) {\n            setError('Could not fetch weather data for your location. Please try again.');\n          }\n        });\n      } else {\n        setError('Geolocation is not supported by this browser.');\n      }\n    };\n\n    fetchCurrentLocationWeather();\n  }, []);\n\n  const handleSearch = async (location) => {\n    try {\n      const data = await fetchWeather(location);\n      setWeather(data);\n      setError('');\n      setCurrentLocation(data.name); // Update current location with searched location\n    } catch (err) {\n      setError('Could not fetch weather data. Please try again.');\n    }\n  };\n\n  return (\n    <div className={`app ${isDarkMode ? 'dark' : 'light'}`}>\n      <div className='toggsearch'>\n      <button className=\"toggle-button btn\" onClick={() => setIsDarkMode(!isDarkMode)}>\n         {isDarkMode ? 'Light' : 'Dark'} Mode\n        <FontAwesomeIcon className='mx-2' style={{fontSize:'20px'}} icon={isDarkMode ? faToggleOff : faToggleOn} />\n      </button>\n      <SearchBar onSearch={handleSearch} />\n      </div>\n      \n\n      {error && <p className=\"error text-danger\">{error}</p>}\n      {weather && <WeatherCard weather={weather} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}