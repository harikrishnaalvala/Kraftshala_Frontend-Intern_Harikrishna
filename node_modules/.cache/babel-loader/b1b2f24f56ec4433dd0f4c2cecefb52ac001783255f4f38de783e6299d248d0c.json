{"ast":null,"code":"// src/api/weatherAPI.js\nimport axios from 'axios';\nimport { BASE_URL, API_KEY } from '../config';\nexport const fetchWeather = async (location, lat, lon) => {\n  try {\n    let response;\n    if (location) {\n      response = await axios.get(`${BASE_URL}weather?q=${location}&appid=${API_KEY}&units=metric`);\n    } else {\n      response = await axios.get(`${BASE_URL}weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\n    }\n    return response.data;\n  } catch (error) {\n    throw new Error('Unable to fetch weather data');\n  }\n};","map":{"version":3,"names":["axios","BASE_URL","API_KEY","fetchWeather","location","lat","lon","response","get","data","error","Error"],"sources":["C:/Users/harir/Downloads/Kraftshala_Frontend Intern_Harikrishna/Kraftshala_Frontend Intern_Harikrishna/src/api/weatherAPI.js"],"sourcesContent":["// src/api/weatherAPI.js\r\nimport axios from 'axios';\r\nimport { BASE_URL, API_KEY } from '../config';\r\n\r\nexport const fetchWeather = async (location, lat, lon) => {\r\n  try {\r\n    let response;\r\n    if (location) {\r\n      response = await axios.get(`${BASE_URL}weather?q=${location}&appid=${API_KEY}&units=metric`);\r\n    } else {\r\n      response = await axios.get(`${BASE_URL}weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric`);\r\n    }\r\n    return response.data;\r\n  } catch (error) {\r\n    throw new Error('Unable to fetch weather data');\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,OAAO,QAAQ,WAAW;AAE7C,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,GAAG,EAAEC,GAAG,KAAK;EACxD,IAAI;IACF,IAAIC,QAAQ;IACZ,IAAIH,QAAQ,EAAE;MACZG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,QAAQ,aAAaG,QAAQ,UAAUF,OAAO,eAAe,CAAC;IAC9F,CAAC,MAAM;MACLK,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,QAAQ,eAAeI,GAAG,QAAQC,GAAG,UAAUJ,OAAO,eAAe,CAAC;IACtG;IACA,OAAOK,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EACjD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}